Программа на Java отправляет в последовательный порт команду (возможно, с помощью буфера byte[]),
которая содержит: ID (4 байта), массив данных byte[8], задержку при повторении посылки CAN в мс.
При указании задержки, равной нулю, происходит обнуление имеющейся записи в программе контроллера.

Базовая программа для контроллера:
#include <mcp_can.h>
#include <SPI.h>

// CAN Send Example
SPIClass vspi = SPIClass (VSPI);
//SPIClass hspi = SPIClass (HSPI);

MCP_CAN CAN0(&vspi,5);
//MCP_CAN CAN0(&hspi,15);     // Using HSPI, set CS to pin 15

void setup()
{
  Serial.begin(115200);  
  vspi.begin(18, 19, 23, 5); // Pins for VSPI
  //hspi.begin(14, 12, 13, 15); // Pins for HSPI
  // Initialize MCP2515 running at 16MHz with a baudrate of 500kb/s and the masks and filters disabled.
  if(CAN0.begin(MCP_ANY, CAN_250KBPS, MCP_8MHZ) == CAN_OK) Serial.println("MCP2515 Initialized Successfully!");
  else Serial.println("Error Initializing MCP2515...");
  CAN0.setMode(MCP_NORMAL);   // Change to normal mode to allow messages to be transmitted
}

//byte data[8] = {0, 0, 0, 0, 0, 0, 0xFD, 0};
byte data[8] = {0, 0, 0, 0, 0xFD, 0, 0, 0}; //Задние противотуманные фонари

void loop()
{
  // send data:  ID = 0x100, Standard CAN Frame, Data length = 8 bytes, 'data' = array of data bytes to send
  //byte sndStat = CAN0.sendMsgBuf(0x18FF20F9, 1, 8, data);
  byte sndStat = CAN0.sendMsgBuf(0x18FE40F9, 1, 8, data); //Задние противотуманные фонари
  if(sndStat == CAN_OK){
    Serial.println("Message Sent Successfully!");
  } else {
    Serial.println("Error Sending Message...");
  }
  delay(100);   // send data per 100ms
}

Нужно разработать программу, которая содержит буфер имеющихся команд.
При приеме посылки по последовательному порту либо вносит новую команду, либо производит побитовое сложение с уже имеющейся командой,
если она имеет тот же идентификатор.
Включение сигнализатора - это изменение одного байта из массива данных byte[8].
